// Initialization array generated by tool warmboot_code_gen
// The entries marked "(*)" below are not used by warm boot sequence
// The entries marked "(+)" are restored outside and need to be preserved
#define SW_DEFAULT(d,r) (d##_##r##_0_SW_DEFAULT_VAL)
static const NvBootSdramParams initParams =
{
    NvBootMemoryType_None,                    // MemoryType
    0,                                        // PllMInputDivider (+)
    0,                                        // PllMFeedbackDivider (+)
    0,                                        // PllMStableTime (+)
    0,                                        // PllMSetupControl (+)
    0,                                        // PllMPostDivider (+)
    0,                                        // PllMKCP (+)
    0,                                        // PllMKVCO (+)
    0,                                        // EmcBctSpare0
    0,                                        // EmcBctSpare1
    0,                                        // EmcBctSpare2
    0,                                        // EmcBctSpare3
    0,                                        // EmcBctSpare4
    0,                                        // EmcBctSpare5
    0,                                        // EmcBctSpare6
    0,                                        // EmcBctSpare7
    0,                                        // EmcBctSpare8
    0,                                        // EmcBctSpare9
    0,                                        // EmcBctSpare10 (*)
    0,                                        // EmcBctSpare11 (*)
    0,                                        // EmcBctSpare12
    0,                                        // EmcBctSpare13
    0,                                        // EmcBctSpareSecure0 (*)
    0,                                        // EmcBctSpareSecure1 (*)
    0,                                        // EmcBctSpareSecure2 (*)
    0,                                        // EmcBctSpareSecure3 (*)
    0,                                        // EmcBctSpareSecure4 (*)
    0,                                        // EmcBctSpareSecure5 (*)
    0,                                        // EmcBctSpareSecure6 (*)
    0,                                        // EmcBctSpareSecure7 (*)
    0,                                        // EmcBctSpareSecure8 (*)
    0,                                        // EmcBctSpareSecure9 (*)
    0,                                        // EmcBctSpareSecure10 (*)
    0,                                        // EmcBctSpareSecure11 (*)
    0,                                        // EmcBctSpareSecure12 (*)
    0,                                        // EmcBctSpareSecure13 (*)
    0,                                        // EmcBctSpareSecure14 (*)
    0,                                        // EmcBctSpareSecure15 (*)
    0,                                        // EmcBctSpareSecure16 (*)
    0,                                        // EmcBctSpareSecure17 (*)
    0,                                        // EmcBctSpareSecure18 (*)
    0,                                        // EmcBctSpareSecure19 (*)
    0,                                        // EmcBctSpareSecure20 (*)
    0,                                        // EmcBctSpareSecure21 (*)
    0,                                        // EmcBctSpareSecure22 (*)
    0,                                        // EmcBctSpareSecure23 (*)
    SW_DEFAULT(CLK_RST_CONTROLLER, CLK_SOURCE_EMC), // EmcClockSource
    SW_DEFAULT(CLK_RST_CONTROLLER, CLK_SOURCE_EMC_DLL), // EmcClockSourceDll
    SW_DEFAULT(CLK_RST_CONTROLLER, PLLM_MISC2),
                                              // ClkRstControllerPllmMisc2Override
    0,
                                              // ClkRstControllerPllmMisc2OverrideEnable
    0,                                        // ClearClk2Mc1
    SW_DEFAULT(EMC, AUTO_CAL_INTERVAL),       // EmcAutoCalInterval
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG),         // EmcAutoCalConfig
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG2),        // EmcAutoCalConfig2
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG3),        // EmcAutoCalConfig3
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG4),        // EmcAutoCalConfig4
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG5),        // EmcAutoCalConfig5
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG6),        // EmcAutoCalConfig6
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG7),        // EmcAutoCalConfig7
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG8),        // EmcAutoCalConfig8
    SW_DEFAULT(EMC, AUTO_CAL_CONFIG9),        // EmcAutoCalConfig9
    SW_DEFAULT(EMC, AUTO_CAL_VREF_SEL_0),     // EmcAutoCalVrefSel0
    SW_DEFAULT(EMC, AUTO_CAL_VREF_SEL_1),     // EmcAutoCalVrefSel1
    SW_DEFAULT(EMC, AUTO_CAL_CHANNEL),        // EmcAutoCalChannel
    SW_DEFAULT(EMC, PMACRO_AUTOCAL_CFG_0),    // EmcPmacroAutocalCfg0
    SW_DEFAULT(EMC, PMACRO_AUTOCAL_CFG_1),    // EmcPmacroAutocalCfg1
    SW_DEFAULT(EMC, PMACRO_AUTOCAL_CFG_2),    // EmcPmacroAutocalCfg2
    SW_DEFAULT(EMC, PMACRO_RX_TERM),          // EmcPmacroRxTerm
    SW_DEFAULT(EMC, PMACRO_DQ_TX_DRV),        // EmcPmacroDqTxDrv
    SW_DEFAULT(EMC, PMACRO_CA_TX_DRV),        // EmcPmacroCaTxDrv
    SW_DEFAULT(EMC, PMACRO_CMD_TX_DRV),       // EmcPmacroCmdTxDrv
    SW_DEFAULT(EMC, PMACRO_AUTOCAL_CFG_COMMON), // EmcPmacroAutocalCfgCommon
    SW_DEFAULT(EMC, PMACRO_ZCTRL),            // EmcPmacroZctrl
    0,                                        // EmcAutoCalWait
    SW_DEFAULT(EMC, XM2COMPPADCTRL),          // EmcXm2CompPadCtrl
    SW_DEFAULT(EMC, XM2COMPPADCTRL2),         // EmcXm2CompPadCtrl2
    SW_DEFAULT(EMC, XM2COMPPADCTRL3),         // EmcXm2CompPadCtrl3
    SW_DEFAULT(EMC, ADR_CFG),                 // EmcAdrCfg
    0,                                        // EmcPinProgramWait
    0,                                        // EmcPinExtraWait (*)
    0,                                        // EmcPinGpioEn
    0,                                        // EmcPinGpio
    0,                                        // EmcTimingControlWait
    SW_DEFAULT(EMC, RC),                      // EmcRc
    SW_DEFAULT(EMC, RFC),                     // EmcRfc
    SW_DEFAULT(EMC, RFCPB),                   // EmcRfcPb
    SW_DEFAULT(EMC, REFCTRL2),                // EmcRefctrl2
    SW_DEFAULT(EMC, RFC_SLR),                 // EmcRfcSlr
    SW_DEFAULT(EMC, RAS),                     // EmcRas
    SW_DEFAULT(EMC, RP),                      // EmcRp
    SW_DEFAULT(EMC, R2R),                     // EmcR2r
    SW_DEFAULT(EMC, W2W),                     // EmcW2w
    SW_DEFAULT(EMC, R2W),                     // EmcR2w
    SW_DEFAULT(EMC, W2R),                     // EmcW2r
    SW_DEFAULT(EMC, R2P),                     // EmcR2p
    SW_DEFAULT(EMC, W2P),                     // EmcW2p
    SW_DEFAULT(EMC, TPPD),                    // EmcTppd
    SW_DEFAULT(EMC, TRTM),                    // EmcTrtm
    SW_DEFAULT(EMC, TWTM),                    // EmcTwtm
    SW_DEFAULT(EMC, TRATM),                   // EmcTratm
    SW_DEFAULT(EMC, TWATM),                   // EmcTwatm
    SW_DEFAULT(EMC, TR2REF),                  // EmcTr2ref
    SW_DEFAULT(EMC, CCDMW),                   // EmcCcdmw
    SW_DEFAULT(EMC, RD_RCD),                  // EmcRdRcd
    SW_DEFAULT(EMC, WR_RCD),                  // EmcWrRcd
    SW_DEFAULT(EMC, RRD),                     // EmcRrd
    SW_DEFAULT(EMC, REXT),                    // EmcRext
    SW_DEFAULT(EMC, WEXT),                    // EmcWext
    SW_DEFAULT(EMC, WDV),                     // EmcWdv
    SW_DEFAULT(EMC, WDV_CHK),                 // EmcWdvChk
    SW_DEFAULT(EMC, WSV),                     // EmcWsv
    SW_DEFAULT(EMC, WEV),                     // EmcWev
    SW_DEFAULT(EMC, WDV_MASK),                // EmcWdvMask
    SW_DEFAULT(EMC, WS_DURATION),             // EmcWsDuration
    SW_DEFAULT(EMC, WE_DURATION),             // EmcWeDuration
    SW_DEFAULT(EMC, QUSE),                    // EmcQUse
    SW_DEFAULT(EMC, QUSE_WIDTH),              // EmcQuseWidth
    SW_DEFAULT(EMC, IBDLY),                   // EmcIbdly
    SW_DEFAULT(EMC, OBDLY),                   // EmcObdly
    SW_DEFAULT(EMC, EINPUT),                  // EmcEInput
    SW_DEFAULT(EMC, EINPUT_DURATION),         // EmcEInputDuration
    SW_DEFAULT(EMC, PUTERM_EXTRA),            // EmcPutermExtra
    SW_DEFAULT(EMC, PUTERM_WIDTH),            // EmcPutermWidth
    SW_DEFAULT(EMC, QRST),                    // EmcQRst
    SW_DEFAULT(EMC, QSAFE),                   // EmcQSafe
    SW_DEFAULT(EMC, RDV),                     // EmcRdv
    SW_DEFAULT(EMC, RDV_MASK),                // EmcRdvMask
    SW_DEFAULT(EMC, RDV_EARLY),               // EmcRdvEarly
    SW_DEFAULT(EMC, RDV_EARLY_MASK),          // EmcRdvEarlyMask
    SW_DEFAULT(EMC, QPOP),                    // EmcQpop
    SW_DEFAULT(EMC, REFRESH),                 // EmcRefresh
    SW_DEFAULT(EMC, BURST_REFRESH_NUM),       // EmcBurstRefreshNum
    SW_DEFAULT(EMC, PRE_REFRESH_REQ_CNT),     // EmcPreRefreshReqCnt
    SW_DEFAULT(EMC, PDEX2WR),                 // EmcPdEx2Wr
    SW_DEFAULT(EMC, PDEX2RD),                 // EmcPdEx2Rd
    SW_DEFAULT(EMC, PCHG2PDEN),               // EmcPChg2Pden
    SW_DEFAULT(EMC, ACT2PDEN),                // EmcAct2Pden
    SW_DEFAULT(EMC, AR2PDEN),                 // EmcAr2Pden
    SW_DEFAULT(EMC, RW2PDEN),                 // EmcRw2Pden
    SW_DEFAULT(EMC, CKE2PDEN),                // EmcCke2Pden
    SW_DEFAULT(EMC, PDEX2CKE),                // EmcPdex2Cke
    SW_DEFAULT(EMC, PDEX2MRR),                // EmcPdex2Mrr
    SW_DEFAULT(EMC, TXSR),                    // EmcTxsr
    SW_DEFAULT(EMC, TXSRDLL),                 // EmcTxsrDll
    SW_DEFAULT(EMC, TCKE),                    // EmcTcke
    SW_DEFAULT(EMC, TCKESR),                  // EmcTckesr
    SW_DEFAULT(EMC, TPD),                     // EmcTpd
    SW_DEFAULT(EMC, TFAW),                    // EmcTfaw
    SW_DEFAULT(EMC, TRPAB),                   // EmcTrpab
    SW_DEFAULT(EMC, TCLKSTABLE),              // EmcTClkStable
    SW_DEFAULT(EMC, TCLKSTOP),                // EmcTClkStop
    SW_DEFAULT(EMC, TREFBW),                  // EmcTRefBw
    SW_DEFAULT(EMC, FBIO_CFG5),               // EmcFbioCfg5
    SW_DEFAULT(EMC, FBIO_CFG7),               // EmcFbioCfg7
    SW_DEFAULT(EMC, FBIO_CFG8),               // EmcFbioCfg8
    SW_DEFAULT(EMC, CMD_MAPPING_CMD0_0),      // EmcCmdMappingCmd0_0
    SW_DEFAULT(EMC, CMD_MAPPING_CMD0_1),      // EmcCmdMappingCmd0_1
    SW_DEFAULT(EMC, CMD_MAPPING_CMD0_2),      // EmcCmdMappingCmd0_2
    SW_DEFAULT(EMC, CMD_MAPPING_CMD1_0),      // EmcCmdMappingCmd1_0
    SW_DEFAULT(EMC, CMD_MAPPING_CMD1_1),      // EmcCmdMappingCmd1_1
    SW_DEFAULT(EMC, CMD_MAPPING_CMD1_2),      // EmcCmdMappingCmd1_2
    SW_DEFAULT(EMC, CMD_MAPPING_CMD2_0),      // EmcCmdMappingCmd2_0
    SW_DEFAULT(EMC, CMD_MAPPING_CMD2_1),      // EmcCmdMappingCmd2_1
    SW_DEFAULT(EMC, CMD_MAPPING_CMD2_2),      // EmcCmdMappingCmd2_2
    SW_DEFAULT(EMC, CMD_MAPPING_CMD3_0),      // EmcCmdMappingCmd3_0
    SW_DEFAULT(EMC, CMD_MAPPING_CMD3_1),      // EmcCmdMappingCmd3_1
    SW_DEFAULT(EMC, CMD_MAPPING_CMD3_2),      // EmcCmdMappingCmd3_2
    SW_DEFAULT(EMC, CMD_MAPPING_BYTE),        // EmcCmdMappingByte
    SW_DEFAULT(EMC, FBIO_SPARE),              // EmcFbioSpare
    SW_DEFAULT(EMC, CFG_RSV),                 // EmcCfgRsv
    SW_DEFAULT(EMC, MRS),                     // EmcMrs
    SW_DEFAULT(EMC, EMRS),                    // EmcEmrs
    SW_DEFAULT(EMC, EMRS2),                   // EmcEmrs2
    SW_DEFAULT(EMC, EMRS3),                   // EmcEmrs3
    SW_DEFAULT(EMC, MRW),                     // EmcMrw1
    SW_DEFAULT(EMC, MRW2),                    // EmcMrw2
    SW_DEFAULT(EMC, MRW3),                    // EmcMrw3
    SW_DEFAULT(EMC, MRW4),                    // EmcMrw4
    SW_DEFAULT(EMC, MRW6),                    // EmcMrw6
    SW_DEFAULT(EMC, MRW8),                    // EmcMrw8
    SW_DEFAULT(EMC, MRW9),                    // EmcMrw9
    SW_DEFAULT(EMC, MRW10),                   // EmcMrw10
    SW_DEFAULT(EMC, MRW12),                   // EmcMrw12
    SW_DEFAULT(EMC, MRW13),                   // EmcMrw13
    SW_DEFAULT(EMC, MRW14),                   // EmcMrw14
    0,                                        // EmcMrwExtra (*)
    SW_DEFAULT(EMC, MRW),                     // EmcWarmBootMrwExtra
    0,                                        // EmcWarmBootExtraModeRegWriteEnable
    0,                                        // EmcExtraModeRegWriteEnable (*)
    0,                                        // EmcMrwResetCommand (*)
    0,                                        // EmcMrwResetNInitWait (*)
    SW_DEFAULT(EMC, MRS_WAIT_CNT),            // EmcMrsWaitCnt
    SW_DEFAULT(EMC, MRS_WAIT_CNT2),           // EmcMrsWaitCnt2
    SW_DEFAULT(EMC, CFG),                     // EmcCfg
    SW_DEFAULT(EMC, CFG_2),                   // EmcCfg2
    SW_DEFAULT(EMC, CFG_PIPE),                // EmcCfgPipe
    SW_DEFAULT(EMC, CFG_PIPE_CLK),            // EmcCfgPipeClk
    SW_DEFAULT(EMC, FDPD_CTRL_CMD_NO_RAMP),   // EmcFdpdCtrlCmdNoRamp
    SW_DEFAULT(EMC, CFG_UPDATE),              // EmcCfgUpdate
    SW_DEFAULT(EMC, DBG),                     // EmcDbg
    0,                                        // EmcDbgWriteMux
    SW_DEFAULT(EMC, CMDQ),                    // EmcCmdQ
    SW_DEFAULT(EMC, MC2EMCQ),                 // EmcMc2EmcQ
    SW_DEFAULT(EMC, DYN_SELF_REF_CONTROL),    // EmcDynSelfRefControl
    AHB_ARBITRATION_XBAR_CTRL_0_MEM_INIT_DONE_DEFAULT,
                                              // AhbArbitrationXbarCtrlMemInitDone
    SW_DEFAULT(EMC, CFG_DIG_DLL),             // EmcCfgDigDll
    SW_DEFAULT(EMC, CFG_DIG_DLL_1),           // EmcCfgDigDll_1
    SW_DEFAULT(EMC, CFG_DIG_DLL_PERIOD),      // EmcCfgDigDllPeriod
    0,                                        // EmcDevSelect
    SW_DEFAULT(EMC, SEL_DPD_CTRL),            // EmcSelDpdCtrl
    SW_DEFAULT(EMC, FDPD_CTRL_DQ),            // EmcFdpdCtrlDq
    SW_DEFAULT(EMC, FDPD_CTRL_CMD),           // EmcFdpdCtrlCmd
    SW_DEFAULT(EMC, PMACRO_IB_VREF_DQ_0),     // EmcPmacroIbVrefDq_0
    SW_DEFAULT(EMC, PMACRO_IB_VREF_DQ_1),     // EmcPmacroIbVrefDq_1
    SW_DEFAULT(EMC, PMACRO_IB_VREF_DQS_0),    // EmcPmacroIbVrefDqs_0
    SW_DEFAULT(EMC, PMACRO_IB_VREF_DQS_1),    // EmcPmacroIbVrefDqs_1
    SW_DEFAULT(EMC, PMACRO_IB_RXRT),          // EmcPmacroIbRxrt
    SW_DEFAULT(EMC, CFG_PIPE_1),              // EmcCfgPipe1
    SW_DEFAULT(EMC, CFG_PIPE_2),              // EmcCfgPipe2
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK0_0), // EmcPmacroQuseDdllRank0_0
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK0_1), // EmcPmacroQuseDdllRank0_1
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK0_2), // EmcPmacroQuseDdllRank0_2
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK0_3), // EmcPmacroQuseDdllRank0_3
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK0_4), // EmcPmacroQuseDdllRank0_4
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK0_5), // EmcPmacroQuseDdllRank0_5
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK1_0), // EmcPmacroQuseDdllRank1_0
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK1_1), // EmcPmacroQuseDdllRank1_1
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK1_2), // EmcPmacroQuseDdllRank1_2
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK1_3), // EmcPmacroQuseDdllRank1_3
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK1_4), // EmcPmacroQuseDdllRank1_4
    SW_DEFAULT(EMC, PMACRO_QUSE_DDLL_RANK1_5), // EmcPmacroQuseDdllRank1_5
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK0_0),
                                              // EmcPmacroObDdllLongDqRank0_0
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK0_1),
                                              // EmcPmacroObDdllLongDqRank0_1
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK0_2),
                                              // EmcPmacroObDdllLongDqRank0_2
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK0_3),
                                              // EmcPmacroObDdllLongDqRank0_3
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK0_4),
                                              // EmcPmacroObDdllLongDqRank0_4
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK0_5),
                                              // EmcPmacroObDdllLongDqRank0_5
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK1_0),
                                              // EmcPmacroObDdllLongDqRank1_0
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK1_1),
                                              // EmcPmacroObDdllLongDqRank1_1
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK1_2),
                                              // EmcPmacroObDdllLongDqRank1_2
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK1_3),
                                              // EmcPmacroObDdllLongDqRank1_3
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK1_4),
                                              // EmcPmacroObDdllLongDqRank1_4
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQ_RANK1_5),
                                              // EmcPmacroObDdllLongDqRank1_5
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK0_0),
                                              // EmcPmacroObDdllLongDqsRank0_0
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK0_1),
                                              // EmcPmacroObDdllLongDqsRank0_1
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK0_2),
                                              // EmcPmacroObDdllLongDqsRank0_2
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK0_3),
                                              // EmcPmacroObDdllLongDqsRank0_3
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK0_4),
                                              // EmcPmacroObDdllLongDqsRank0_4
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK0_5),
                                              // EmcPmacroObDdllLongDqsRank0_5
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK1_0),
                                              // EmcPmacroObDdllLongDqsRank1_0
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK1_1),
                                              // EmcPmacroObDdllLongDqsRank1_1
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK1_2),
                                              // EmcPmacroObDdllLongDqsRank1_2
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK1_3),
                                              // EmcPmacroObDdllLongDqsRank1_3
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK1_4),
                                              // EmcPmacroObDdllLongDqsRank1_4
    SW_DEFAULT(EMC, PMACRO_OB_DDLL_LONG_DQS_RANK1_5),
                                              // EmcPmacroObDdllLongDqsRank1_5
    SW_DEFAULT(EMC, PMACRO_IB_DDLL_LONG_DQS_RANK0_0),
                                              // EmcPmacroIbDdllLongDqsRank0_0
    SW_DEFAULT(EMC, PMACRO_IB_DDLL_LONG_DQS_RANK0_1),
                                              // EmcPmacroIbDdllLongDqsRank0_1
    SW_DEFAULT(EMC, PMACRO_IB_DDLL_LONG_DQS_RANK0_2),
                                              // EmcPmacroIbDdllLongDqsRank0_2
    SW_DEFAULT(EMC, PMACRO_IB_DDLL_LONG_DQS_RANK0_3),
                                              // EmcPmacroIbDdllLongDqsRank0_3
    SW_DEFAULT(EMC, PMACRO_IB_DDLL_LONG_DQS_RANK1_0),
                                              // EmcPmacroIbDdllLongDqsRank1_0
    SW_DEFAULT(EMC, PMACRO_IB_DDLL_LONG_DQS_RANK1_1),
                                              // EmcPmacroIbDdllLongDqsRank1_1
    SW_DEFAULT(EMC, PMACRO_IB_DDLL_LONG_DQS_RANK1_2),
                                              // EmcPmacroIbDdllLongDqsRank1_2
    SW_DEFAULT(EMC, PMACRO_IB_DDLL_LONG_DQS_RANK1_3),
                                              // EmcPmacroIbDdllLongDqsRank1_3
    SW_DEFAULT(EMC, PMACRO_DDLL_LONG_CMD_0),  // EmcPmacroDdllLongCmd_0
    SW_DEFAULT(EMC, PMACRO_DDLL_LONG_CMD_1),  // EmcPmacroDdllLongCmd_1
    SW_DEFAULT(EMC, PMACRO_DDLL_LONG_CMD_2),  // EmcPmacroDdllLongCmd_2
    SW_DEFAULT(EMC, PMACRO_DDLL_LONG_CMD_3),  // EmcPmacroDdllLongCmd_3
    SW_DEFAULT(EMC, PMACRO_DDLL_LONG_CMD_4),  // EmcPmacroDdllLongCmd_4
    SW_DEFAULT(EMC, PMACRO_DDLL_SHORT_CMD_0), // EmcPmacroDdllShortCmd_0
    SW_DEFAULT(EMC, PMACRO_DDLL_SHORT_CMD_1), // EmcPmacroDdllShortCmd_1
    SW_DEFAULT(EMC, PMACRO_DDLL_SHORT_CMD_2), // EmcPmacroDdllShortCmd_2
    SW_DEFAULT(EMC, PMACRO_DDLL_PERIODIC_OFFSET), // EmcPmacroDdllPeriodicOffset
    0,                                        // WarmBootWait
    SW_DEFAULT(EMC, ODT_WRITE),               // EmcOdtWrite
    SW_DEFAULT(EMC, ZCAL_INTERVAL),           // EmcZcalInterval
    SW_DEFAULT(EMC, ZCAL_WAIT_CNT),           // EmcZcalWaitCnt
    SW_DEFAULT(EMC, ZCAL_MRW_CMD),            // EmcZcalMrwCmd
    0,                                        // EmcMrsResetDll (*)
    0,                                        // EmcZcalInitDev0 (*)
    0,                                        // EmcZcalInitDev1 (*)
    0,                                        // EmcZcalInitWait (*)
    0,                                        // EmcZcalWarmColdBootEnables
    SW_DEFAULT(EMC, MRW),                     // EmcMrwLpddr2ZcalWarmBoot
    SW_DEFAULT(EMC, ZQ_CAL),                  // EmcZqCalDdr3WarmBoot
    SW_DEFAULT(EMC, ZQ_CAL),                  // EmcZqCalLpDdr4WarmBoot
    0,                                        // EmcZcalWarmBootWait
    0,                                        // EmcMrsWarmBootEnable
    0,                                        // EmcMrsResetDllWait (*)
    0,                                        // EmcMrsExtra (*)
    SW_DEFAULT(EMC, MRS),                     // EmcWarmBootMrsExtra
    0,                                        // EmcEmrsDdr2DllEnable (*)
    0,                                        // EmcMrsDdr2DllReset (*)
    0,                                        // EmcEmrsDdr2OcdCalib (*)
    0,                                        // EmcDdr2Wait (*)
    SW_DEFAULT(EMC, CLKEN_OVERRIDE),          // EmcClkenOverride
    0,                                        // EmcExtraRefreshNum
    0,                                        // EmcClkenOverrideAllWarmBoot
    0,                                        // McClkenOverrideAllWarmBoot
    0,                                        // EmcCfgDigDllPeriodWarmBoot
    0,                                        // PmcVddpSel (*)
    0,                                        // PmcVddpSelWait (*)
    0,                                        // PmcDdrCfg (*)
    0,                                        // PmcIoDpd3Req (*)
    1,                                        // PmcIoDpd3ReqWait
    2,                                        // PmcIoDpd4ReqWait
    0,                                        // PmcRegShort (*)
    0,                                        // PmcNoIoPower (*)
    0,                                        // PmcDdrCntrlWait (*)
    0,                                        // PmcDdrCntrl (*)
    SW_DEFAULT(EMC, ACPD_CONTROL),            // EmcAcpdControl
    SW_DEFAULT(EMC, SWIZZLE_RANK0_BYTE0),     // EmcSwizzleRank0Byte0
    SW_DEFAULT(EMC, SWIZZLE_RANK0_BYTE1),     // EmcSwizzleRank0Byte1
    SW_DEFAULT(EMC, SWIZZLE_RANK0_BYTE2),     // EmcSwizzleRank0Byte2
    SW_DEFAULT(EMC, SWIZZLE_RANK0_BYTE3),     // EmcSwizzleRank0Byte3
    SW_DEFAULT(EMC, SWIZZLE_RANK1_BYTE0),     // EmcSwizzleRank1Byte0
    SW_DEFAULT(EMC, SWIZZLE_RANK1_BYTE1),     // EmcSwizzleRank1Byte1
    SW_DEFAULT(EMC, SWIZZLE_RANK1_BYTE2),     // EmcSwizzleRank1Byte2
    SW_DEFAULT(EMC, SWIZZLE_RANK1_BYTE3),     // EmcSwizzleRank1Byte3
    SW_DEFAULT(EMC, TXDSRVTTGEN),             // EmcTxdsrvttgen
    SW_DEFAULT(EMC, DATA_BRLSHFT_0),          // EmcDataBrlshft0
    SW_DEFAULT(EMC, DATA_BRLSHFT_1),          // EmcDataBrlshft1
    SW_DEFAULT(EMC, DQS_BRLSHFT_0),           // EmcDqsBrlshft0
    SW_DEFAULT(EMC, DQS_BRLSHFT_1),           // EmcDqsBrlshft1
    SW_DEFAULT(EMC, CMD_BRLSHFT_0),           // EmcCmdBrlshft0
    SW_DEFAULT(EMC, CMD_BRLSHFT_1),           // EmcCmdBrlshft1
    SW_DEFAULT(EMC, CMD_BRLSHFT_2),           // EmcCmdBrlshft2
    SW_DEFAULT(EMC, CMD_BRLSHFT_3),           // EmcCmdBrlshft3
    SW_DEFAULT(EMC, QUSE_BRLSHFT_0),          // EmcQuseBrlshft0
    SW_DEFAULT(EMC, QUSE_BRLSHFT_1),          // EmcQuseBrlshft1
    SW_DEFAULT(EMC, QUSE_BRLSHFT_2),          // EmcQuseBrlshft2
    SW_DEFAULT(EMC, QUSE_BRLSHFT_3),          // EmcQuseBrlshft3
    SW_DEFAULT(EMC, PMACRO_DLL_CFG_0),        // EmcPmacroDllCfg0
    SW_DEFAULT(EMC, PMACRO_DLL_CFG_1),        // EmcPmacroDllCfg1
    SW_DEFAULT(EMC, PMC_SCRATCH1),            // EmcPmcScratch1
    SW_DEFAULT(EMC, PMC_SCRATCH2),            // EmcPmcScratch2
    SW_DEFAULT(EMC, PMC_SCRATCH3),            // EmcPmcScratch3
    SW_DEFAULT(EMC, PMACRO_PAD_CFG_CTRL),     // EmcPmacroPadCfgCtrl
    SW_DEFAULT(EMC, PMACRO_VTTGEN_CTRL_0),    // EmcPmacroVttgenCtrl0
    SW_DEFAULT(EMC, PMACRO_VTTGEN_CTRL_1),    // EmcPmacroVttgenCtrl1
    SW_DEFAULT(EMC, PMACRO_VTTGEN_CTRL_2),    // EmcPmacroVttgenCtrl2
    SW_DEFAULT(EMC, PMACRO_DSR_VTTGEN_CTRL_0), // EmcPmacroDsrVttgenCtrl0
    SW_DEFAULT(EMC, PMACRO_BRICK_CTRL_RFU1),  // EmcPmacroBrickCtrlRfu1
    SW_DEFAULT(EMC, PMACRO_CMD_BRICK_CTRL_FDPD), // EmcPmacroCmdBrickCtrlFdpd
    SW_DEFAULT(EMC, PMACRO_BRICK_CTRL_RFU2),  // EmcPmacroBrickCtrlRfu2
    SW_DEFAULT(EMC, PMACRO_DATA_BRICK_CTRL_FDPD), // EmcPmacroDataBrickCtrlFdpd
    SW_DEFAULT(EMC, PMACRO_BG_BIAS_CTRL_0),   // EmcPmacroBgBiasCtrl0
    SW_DEFAULT(EMC, PMACRO_DATA_PAD_RX_CTRL), // EmcPmacroDataPadRxCtrl
    SW_DEFAULT(EMC, PMACRO_CMD_PAD_RX_CTRL),  // EmcPmacroCmdPadRxCtrl
    SW_DEFAULT(EMC, PMACRO_DATA_RX_TERM_MODE), // EmcPmacroDataRxTermMode
    SW_DEFAULT(EMC, PMACRO_CMD_RX_TERM_MODE), // EmcPmacroCmdRxTermMode
    SW_DEFAULT(EMC, PMACRO_DATA_PAD_TX_CTRL), // EmcPmacroDataPadTxCtrl
    SW_DEFAULT(EMC, PMACRO_CMD_PAD_TX_CTRL),  // EmcPmacroCmdPadTxCtrl
    SW_DEFAULT(EMC, CFG_3),                   // EmcCfg3
    SW_DEFAULT(EMC, PMACRO_TX_PWRD_0),        // EmcPmacroTxPwrd0
    SW_DEFAULT(EMC, PMACRO_TX_PWRD_1),        // EmcPmacroTxPwrd1
    SW_DEFAULT(EMC, PMACRO_TX_PWRD_2),        // EmcPmacroTxPwrd2
    SW_DEFAULT(EMC, PMACRO_TX_PWRD_3),        // EmcPmacroTxPwrd3
    SW_DEFAULT(EMC, PMACRO_TX_PWRD_4),        // EmcPmacroTxPwrd4
    SW_DEFAULT(EMC, PMACRO_TX_PWRD_5),        // EmcPmacroTxPwrd5
    SW_DEFAULT(EMC, CONFIG_SAMPLE_DELAY),     // EmcConfigSampleDelay
    SW_DEFAULT(EMC, PMACRO_BRICK_MAPPING_0),  // EmcPmacroBrickMapping0
    SW_DEFAULT(EMC, PMACRO_BRICK_MAPPING_1),  // EmcPmacroBrickMapping1
    SW_DEFAULT(EMC, PMACRO_BRICK_MAPPING_2),  // EmcPmacroBrickMapping2
    SW_DEFAULT(EMC, PMACRO_TX_SEL_CLK_SRC_0), // EmcPmacroTxSelClkSrc0
    SW_DEFAULT(EMC, PMACRO_TX_SEL_CLK_SRC_1), // EmcPmacroTxSelClkSrc1
    SW_DEFAULT(EMC, PMACRO_TX_SEL_CLK_SRC_2), // EmcPmacroTxSelClkSrc2
    SW_DEFAULT(EMC, PMACRO_TX_SEL_CLK_SRC_3), // EmcPmacroTxSelClkSrc3
    SW_DEFAULT(EMC, PMACRO_TX_SEL_CLK_SRC_4), // EmcPmacroTxSelClkSrc4
    SW_DEFAULT(EMC, PMACRO_TX_SEL_CLK_SRC_5), // EmcPmacroTxSelClkSrc5
    SW_DEFAULT(EMC, PMACRO_PERBIT_FGCG_CTRL_0), // EmcPmacroPerbitFgcgCtrl0
    SW_DEFAULT(EMC, PMACRO_PERBIT_FGCG_CTRL_1), // EmcPmacroPerbitFgcgCtrl1
    SW_DEFAULT(EMC, PMACRO_PERBIT_FGCG_CTRL_2), // EmcPmacroPerbitFgcgCtrl2
    SW_DEFAULT(EMC, PMACRO_PERBIT_FGCG_CTRL_3), // EmcPmacroPerbitFgcgCtrl3
    SW_DEFAULT(EMC, PMACRO_PERBIT_FGCG_CTRL_4), // EmcPmacroPerbitFgcgCtrl4
    SW_DEFAULT(EMC, PMACRO_PERBIT_FGCG_CTRL_5), // EmcPmacroPerbitFgcgCtrl5
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU_CTRL_0), // EmcPmacroPerbitRfuCtrl0
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU_CTRL_1), // EmcPmacroPerbitRfuCtrl1
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU_CTRL_2), // EmcPmacroPerbitRfuCtrl2
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU_CTRL_3), // EmcPmacroPerbitRfuCtrl3
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU_CTRL_4), // EmcPmacroPerbitRfuCtrl4
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU_CTRL_5), // EmcPmacroPerbitRfuCtrl5
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU1_CTRL_0), // EmcPmacroPerbitRfu1Ctrl0
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU1_CTRL_1), // EmcPmacroPerbitRfu1Ctrl1
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU1_CTRL_2), // EmcPmacroPerbitRfu1Ctrl2
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU1_CTRL_3), // EmcPmacroPerbitRfu1Ctrl3
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU1_CTRL_4), // EmcPmacroPerbitRfu1Ctrl4
    SW_DEFAULT(EMC, PMACRO_PERBIT_RFU1_CTRL_5), // EmcPmacroPerbitRfu1Ctrl5
    SW_DEFAULT(EMC, PMACRO_DATA_PI_CTRL),     // EmcPmacroDataPiCtrl
    SW_DEFAULT(EMC, PMACRO_CMD_PI_CTRL),      // EmcPmacroCmdPiCtrl
    SW_DEFAULT(EMC, PMACRO_DDLL_BYPASS),      // EmcPmacroDdllBypass
    SW_DEFAULT(EMC, PMACRO_DDLL_PWRD_0),      // EmcPmacroDdllPwrd0
    SW_DEFAULT(EMC, PMACRO_DDLL_PWRD_1),      // EmcPmacroDdllPwrd1
    SW_DEFAULT(EMC, PMACRO_DDLL_PWRD_2),      // EmcPmacroDdllPwrd2
    SW_DEFAULT(EMC, PMACRO_CMD_CTRL_0),       // EmcPmacroCmdCtrl0
    SW_DEFAULT(EMC, PMACRO_CMD_CTRL_1),       // EmcPmacroCmdCtrl1
    SW_DEFAULT(EMC, PMACRO_CMD_CTRL_2),       // EmcPmacroCmdCtrl2
    SW_DEFAULT(MC, EMEM_ADR_CFG),             // McEmemAdrCfg
    SW_DEFAULT(MC, EMEM_ADR_CFG_DEV0),        // McEmemAdrCfgDev0
    SW_DEFAULT(MC, EMEM_ADR_CFG_DEV1),        // McEmemAdrCfgDev1
    SW_DEFAULT(MC, EMEM_ADR_CFG_CHANNEL_MASK), // McEmemAdrCfgChannelMask
    SW_DEFAULT(MC, EMEM_ADR_CFG_BANK_MASK_0), // McEmemAdrCfgBankMask0
    SW_DEFAULT(MC, EMEM_ADR_CFG_BANK_MASK_1), // McEmemAdrCfgBankMask1
    SW_DEFAULT(MC, EMEM_ADR_CFG_BANK_MASK_2), // McEmemAdrCfgBankMask2
    SW_DEFAULT(MC, EMEM_CFG),                 // McEmemCfg
    SW_DEFAULT(MC, EMEM_ARB_CFG),             // McEmemArbCfg
    SW_DEFAULT(MC, EMEM_ARB_OUTSTANDING_REQ), // McEmemArbOutstandingReq
    SW_DEFAULT(MC, EMEM_ARB_REFPB_HP_CTRL),   // McEmemArbRefpbHpCtrl
    SW_DEFAULT(MC, EMEM_ARB_REFPB_BANK_CTRL), // McEmemArbRefpbBankCtrl
    SW_DEFAULT(MC, EMEM_ARB_TIMING_RCD),      // McEmemArbTimingRcd
    SW_DEFAULT(MC, EMEM_ARB_TIMING_RP),       // McEmemArbTimingRp
    SW_DEFAULT(MC, EMEM_ARB_TIMING_RC),       // McEmemArbTimingRc
    SW_DEFAULT(MC, EMEM_ARB_TIMING_RAS),      // McEmemArbTimingRas
    SW_DEFAULT(MC, EMEM_ARB_TIMING_FAW),      // McEmemArbTimingFaw
    SW_DEFAULT(MC, EMEM_ARB_TIMING_RRD),      // McEmemArbTimingRrd
    SW_DEFAULT(MC, EMEM_ARB_TIMING_RAP2PRE),  // McEmemArbTimingRap2Pre
    SW_DEFAULT(MC, EMEM_ARB_TIMING_WAP2PRE),  // McEmemArbTimingWap2Pre
    SW_DEFAULT(MC, EMEM_ARB_TIMING_R2R),      // McEmemArbTimingR2R
    SW_DEFAULT(MC, EMEM_ARB_TIMING_W2W),      // McEmemArbTimingW2W
    SW_DEFAULT(MC, EMEM_ARB_TIMING_R2W),      // McEmemArbTimingR2W
    SW_DEFAULT(MC, EMEM_ARB_TIMING_W2R),      // McEmemArbTimingW2R
    SW_DEFAULT(MC, EMEM_ARB_TIMING_RFCPB),    // McEmemArbTimingRFCPB
    SW_DEFAULT(MC, EMEM_ARB_DA_TURNS),        // McEmemArbDaTurns
    SW_DEFAULT(MC, EMEM_ARB_DA_COVERS),       // McEmemArbDaCovers
    SW_DEFAULT(MC, EMEM_ARB_MISC0),           // McEmemArbMisc0
    SW_DEFAULT(MC, EMEM_ARB_MISC1),           // McEmemArbMisc1
    SW_DEFAULT(MC, EMEM_ARB_MISC2),           // McEmemArbMisc2
    SW_DEFAULT(MC, EMEM_ARB_RING1_THROTTLE),  // McEmemArbRing1Throttle
    SW_DEFAULT(MC, EMEM_ARB_OVERRIDE),        // McEmemArbOverride
    SW_DEFAULT(MC, EMEM_ARB_OVERRIDE_1),      // McEmemArbOverride1
    SW_DEFAULT(MC, EMEM_ARB_RSV),             // McEmemArbRsv
    SW_DEFAULT(MC, DA_CONFIG0),               // McDaCfg0
    SW_DEFAULT(MC, EMEM_ARB_TIMING_CCDMW),    // McEmemArbTimingCcdmw
    SW_DEFAULT(MC, CLKEN_OVERRIDE),           // McClkenOverride
    SW_DEFAULT(MC, STAT_CONTROL),             // McStatControl
    SW_DEFAULT(MC, VIDEO_PROTECT_BOM),        // McVideoProtectBom
    SW_DEFAULT(MC, VIDEO_PROTECT_BOM_ADR_HI), // McVideoProtectBomAdrHi
    SW_DEFAULT(MC, VIDEO_PROTECT_SIZE_MB),    // McVideoProtectSizeMb
    SW_DEFAULT(MC, VIDEO_PROTECT_VPR_OVERRIDE), // McVideoProtectVprOverride
    SW_DEFAULT(MC, VIDEO_PROTECT_VPR_OVERRIDE1), // McVideoProtectVprOverride1
    SW_DEFAULT(MC, VIDEO_PROTECT_GPU_OVERRIDE_0), // McVideoProtectGpuOverride0
    SW_DEFAULT(MC, VIDEO_PROTECT_GPU_OVERRIDE_1), // McVideoProtectGpuOverride1
    SW_DEFAULT(MC, SEC_CARVEOUT_BOM),         // McSecCarveoutBom
    SW_DEFAULT(MC, SEC_CARVEOUT_ADR_HI),      // McSecCarveoutAdrHi
    SW_DEFAULT(MC, SEC_CARVEOUT_SIZE_MB),     // McSecCarveoutSizeMb
    SW_DEFAULT(MC, VIDEO_PROTECT_REG_CTRL),   // McVideoProtectWriteAccess
    SW_DEFAULT(MC, SEC_CARVEOUT_REG_CTRL),    // McSecCarveoutProtectWriteAccess
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_BOM),   // McGeneralizedCarveout1Bom
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_BOM_HI), // McGeneralizedCarveout1BomHi
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_SIZE_128KB),
                                              // McGeneralizedCarveout1Size128kb
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_ACCESS0),
                                              // McGeneralizedCarveout1Access0
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_ACCESS1),
                                              // McGeneralizedCarveout1Access1
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_ACCESS2),
                                              // McGeneralizedCarveout1Access2
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_ACCESS3),
                                              // McGeneralizedCarveout1Access3
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_ACCESS4),
                                              // McGeneralizedCarveout1Access4
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_FORCE_INTERNAL_ACCESS0),
                                              // McGeneralizedCarveout1ForceInternalAccess0
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_FORCE_INTERNAL_ACCESS1),
                                              // McGeneralizedCarveout1ForceInternalAccess1
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_FORCE_INTERNAL_ACCESS2),
                                              // McGeneralizedCarveout1ForceInternalAccess2
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_FORCE_INTERNAL_ACCESS3),
                                              // McGeneralizedCarveout1ForceInternalAccess3
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CLIENT_FORCE_INTERNAL_ACCESS4),
                                              // McGeneralizedCarveout1ForceInternalAccess4
    SW_DEFAULT(MC, SECURITY_CARVEOUT1_CFG0),  // McGeneralizedCarveout1Cfg0
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_BOM),   // McGeneralizedCarveout2Bom
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_BOM_HI), // McGeneralizedCarveout2BomHi
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_SIZE_128KB),
                                              // McGeneralizedCarveout2Size128kb
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_ACCESS0),
                                              // McGeneralizedCarveout2Access0
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_ACCESS1),
                                              // McGeneralizedCarveout2Access1
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_ACCESS2),
                                              // McGeneralizedCarveout2Access2
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_ACCESS3),
                                              // McGeneralizedCarveout2Access3
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_ACCESS4),
                                              // McGeneralizedCarveout2Access4
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_FORCE_INTERNAL_ACCESS0),
                                              // McGeneralizedCarveout2ForceInternalAccess0
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_FORCE_INTERNAL_ACCESS1),
                                              // McGeneralizedCarveout2ForceInternalAccess1
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_FORCE_INTERNAL_ACCESS2),
                                              // McGeneralizedCarveout2ForceInternalAccess2
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_FORCE_INTERNAL_ACCESS3),
                                              // McGeneralizedCarveout2ForceInternalAccess3
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CLIENT_FORCE_INTERNAL_ACCESS4),
                                              // McGeneralizedCarveout2ForceInternalAccess4
    SW_DEFAULT(MC, SECURITY_CARVEOUT2_CFG0),  // McGeneralizedCarveout2Cfg0
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_BOM),   // McGeneralizedCarveout3Bom
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_BOM_HI), // McGeneralizedCarveout3BomHi
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_SIZE_128KB),
                                              // McGeneralizedCarveout3Size128kb
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_ACCESS0),
                                              // McGeneralizedCarveout3Access0
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_ACCESS1),
                                              // McGeneralizedCarveout3Access1
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_ACCESS2),
                                              // McGeneralizedCarveout3Access2
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_ACCESS3),
                                              // McGeneralizedCarveout3Access3
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_ACCESS4),
                                              // McGeneralizedCarveout3Access4
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_FORCE_INTERNAL_ACCESS0),
                                              // McGeneralizedCarveout3ForceInternalAccess0
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_FORCE_INTERNAL_ACCESS1),
                                              // McGeneralizedCarveout3ForceInternalAccess1
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_FORCE_INTERNAL_ACCESS2),
                                              // McGeneralizedCarveout3ForceInternalAccess2
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_FORCE_INTERNAL_ACCESS3),
                                              // McGeneralizedCarveout3ForceInternalAccess3
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CLIENT_FORCE_INTERNAL_ACCESS4),
                                              // McGeneralizedCarveout3ForceInternalAccess4
    SW_DEFAULT(MC, SECURITY_CARVEOUT3_CFG0),  // McGeneralizedCarveout3Cfg0
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_BOM),   // McGeneralizedCarveout4Bom
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_BOM_HI), // McGeneralizedCarveout4BomHi
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_SIZE_128KB),
                                              // McGeneralizedCarveout4Size128kb
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_ACCESS0),
                                              // McGeneralizedCarveout4Access0
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_ACCESS1),
                                              // McGeneralizedCarveout4Access1
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_ACCESS2),
                                              // McGeneralizedCarveout4Access2
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_ACCESS3),
                                              // McGeneralizedCarveout4Access3
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_ACCESS4),
                                              // McGeneralizedCarveout4Access4
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_FORCE_INTERNAL_ACCESS0),
                                              // McGeneralizedCarveout4ForceInternalAccess0
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_FORCE_INTERNAL_ACCESS1),
                                              // McGeneralizedCarveout4ForceInternalAccess1
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_FORCE_INTERNAL_ACCESS2),
                                              // McGeneralizedCarveout4ForceInternalAccess2
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_FORCE_INTERNAL_ACCESS3),
                                              // McGeneralizedCarveout4ForceInternalAccess3
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CLIENT_FORCE_INTERNAL_ACCESS4),
                                              // McGeneralizedCarveout4ForceInternalAccess4
    SW_DEFAULT(MC, SECURITY_CARVEOUT4_CFG0),  // McGeneralizedCarveout4Cfg0
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_BOM),   // McGeneralizedCarveout5Bom
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_BOM_HI), // McGeneralizedCarveout5BomHi
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_SIZE_128KB),
                                              // McGeneralizedCarveout5Size128kb
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_ACCESS0),
                                              // McGeneralizedCarveout5Access0
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_ACCESS1),
                                              // McGeneralizedCarveout5Access1
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_ACCESS2),
                                              // McGeneralizedCarveout5Access2
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_ACCESS3),
                                              // McGeneralizedCarveout5Access3
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_ACCESS4),
                                              // McGeneralizedCarveout5Access4
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_FORCE_INTERNAL_ACCESS0),
                                              // McGeneralizedCarveout5ForceInternalAccess0
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_FORCE_INTERNAL_ACCESS1),
                                              // McGeneralizedCarveout5ForceInternalAccess1
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_FORCE_INTERNAL_ACCESS2),
                                              // McGeneralizedCarveout5ForceInternalAccess2
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_FORCE_INTERNAL_ACCESS3),
                                              // McGeneralizedCarveout5ForceInternalAccess3
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CLIENT_FORCE_INTERNAL_ACCESS4),
                                              // McGeneralizedCarveout5ForceInternalAccess4
    SW_DEFAULT(MC, SECURITY_CARVEOUT5_CFG0),  // McGeneralizedCarveout5Cfg0
    0,                                        // EmcCaTrainingEnable (*)
    0,                                        // SwizzleRankByteEncode
    0,                                        // BootRomPatchControl
    0,                                        // BootRomPatchData
    SW_DEFAULT(MC, MTS_CARVEOUT_BOM),         // McMtsCarveoutBom
    SW_DEFAULT(MC, MTS_CARVEOUT_ADR_HI),      // McMtsCarveoutAdrHi
    SW_DEFAULT(MC, MTS_CARVEOUT_SIZE_MB),     // McMtsCarveoutSizeMb
    SW_DEFAULT(MC, MTS_CARVEOUT_REG_CTRL),    // McMtsCarveoutRegCtrl
    SW_DEFAULT(MC, UNTRANSLATED_REGION_CHECK), // McUntranslatedRegionCheck
    0                                         // BCT_NA (*)
};

// End of generated code by warmboot_code_gen
