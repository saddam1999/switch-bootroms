/*
 * Copyright (c) 2015 NVIDIA Corporation.  All rights reserved.
 *
 * NVIDIA Corporation and its licensors retain all intellectual property
 * and proprietary rights in and to this software and related documentation
 * and any modifications thereto.  Any use, reproduction, disclosure or
 * distribution of this software and related documentation without an express
 * license agreement from NVIDIA Corporation is strictly prohibited.
 */

/**
 * Sample RSA-PSS payload for verification testing.
 * This is just an SC7 fw header and 
 */

#ifndef NVBOOT_RSA_PSS_TEST_VECTOR
#define NVBOOT_RSA_PSS_TEST_VECTOR

uint32_t nvboot_rsa_pss_test_vector[] =
{
// This is just an SC7 FW header and branch to self
// as the payload. We can use this to test an RSA-PSS verify operation.
// The RSA key pair used is the OEM dev RSA key.
// #
// # Select the OdmSecure operating mode
// #
// 
// # NOTE: This file can be used for both AES-CMAC and PKC authentication.
// RsaPss.Filename = ../crypto_keys/oem_keys/rsa_priv.txt;
// AuthenticationScheme=AuthenticationScheme_AesCmac;
// # Note, RsaPss and Ecdsa must be used together becuase of the SHA256 hash of the Pcp we are using.
// AuthenticationScheme=AuthenticationScheme_RsaPss;
// #AesEncryption=True;
// 
// RandomAesBlock = Zeroes;
// 
// Destination = 0x40010350;
// EntryPoint = 0x40010350;
// 
// # Ignore this comment. It just means generate header+image
// SendMsg = NvBootWb0Opcode_EncryptAndSign;
// Total message length 0x00000360 Words
// Start of Data 
0x00000360, 0x00000000, 0x00000000, 0x00000000, 
0x00000800, 0x00000000, 0x00000000, 0x00000000, 
0x090738f9, 0xdf4799ca, 0x9338b55d, 0xd4443f0b, 
0x48fb7e63, 0xf748cc53, 0xd4460b92, 0xe717222d, 
0xb01a0256, 0x01494144, 0x9d01cf27, 0x3613096f, 
0xa36183bc, 0xff1fa444, 0x1bf26502, 0x655e9be6, 
0x714ddd27, 0x2e1d2d05, 0x7c5f1239, 0x62dd6cea, 
0x13982576, 0x338edde7, 0x8880c12e, 0x2ed40013, 
0xdd3cbf7d, 0x551051af, 0xdbc6d461, 0xec4d3e69, 
0x36fed94b, 0xc0668361, 0xc01468e1, 0x79057123, 
0x215b2944, 0x70014b27, 0x8067202b, 0xd11822e2, 
0x80457f09, 0x3ad06b3b, 0xa9832660, 0xa44f9b0e, 
0x3f22146d, 0xa2af759c, 0xd7842c6c, 0xf622045a, 
0xf095ffc2, 0x2d051901, 0x4e6e5dab, 0xbaa7a8cb, 
0x9af32a18, 0x56fcdd61, 0xa7f7e6bb, 0x44fe2c12, 
0x114218b7, 0xec70f8f0, 0xd74eddf3, 0xe208e2e0, 
0x9d56cb2a, 0x4d9a3b72, 0x962c7b42, 0xec39dfd7, 
0x1bca368c, 0xb18da42a, 0x8b02e073, 0x93f60e40, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0xd4e12367, 0x4dcb25bd, 0x4aabe943, 0x8311a95c, 
0x92dc37a2, 0x59c655ae, 0x2f343f3b, 0xad6a9eeb, 
0xe0e108b1, 0x370e2029, 0x821ec76c, 0x4b4cf5b5, 
0xc300b49a, 0x62f67f3a, 0xf962cbae, 0xf18af594, 
0xe4885dc7, 0x1d9735c0, 0x1a79a67b, 0x529317bb, 
0x4e426339, 0x88e360cd, 0xa9643712, 0xdbbfd5ae, 
0x320b94ee, 0xb9d3a370, 0x2ec7b907, 0xf4f2a4a4, 
0xca0fa9b9, 0xdf9fdba6, 0xe352ae25, 0xac544c0d, 
0x29bca547, 0x3528d601, 0xd83bf90e, 0x93d18f49, 
0x92ed565a, 0xbb2584a2, 0x75d98e2e, 0x529a44aa, 
0x019c26d8, 0x112183b2, 0x449381f0, 0x17cf72f8, 
0xf4ccb9c8, 0x79b5ece6, 0x88df9a45, 0xf5dc5e6a, 
0xbd9aba18, 0x36b48c6f, 0xa4f5727f, 0x1d25e475, 
0x3e4131f1, 0x70a0ebbc, 0xfbaf0867, 0xef2b30b9, 
0x65d1659c, 0x6148e38f, 0x260d8acd, 0xe253d122, 
0xbed2fcf4, 0xd4a89ac5, 0x8ee82bf2, 0x9d2ab1d3, 
0x0a5467e6, 0x63fc8f55, 0x168c6222, 0x20359a5c, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000360, 0x40010350, 0x40010350, 0x00000004, 
0xeafffffe, 0x00000080, 0x00000000, 0x00000000
// End of Data 
};

#endif // NVBOOT_RSA_PSS_TEST_VECTOR
