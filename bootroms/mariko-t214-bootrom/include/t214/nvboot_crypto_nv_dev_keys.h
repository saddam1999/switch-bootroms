/*
 * Copyright (c) 2015 NVIDIA Corporation.  All rights reserved.
 *
 * NVIDIA Corporation and its licensors retain all intellectual property
 * and proprietary rights in and to this software and related documentation
 * and any modifications thereto.  Any use, reproduction, disclosure or
 * distribution of this software and related documentation without an express
 * license agreement from NVIDIA Corporation is strictly prohibited.
 */

/**
 * Definition of NVIDIA owned crypto keys used for development and bringup.
 * Used for signing NVIDIA assets, not OEM assets.
 * Not for use in production for obvious reasons.
 *
 * See also //hw/nvmobile_t186/drv/bootrom/nvdevkeys/..., the same keys
 * are defined there in big endian format (generated with polarssl).
 *
 */
#ifndef INCLUDED_NVBOOT_CRYPTO_NV_DEV_KEYS_H
#define INCLUDED_NVBOOT_CRYPTO_NV_DEV_KEYS_H


static const unsigned char NvAesDevKey128[] __attribute__ ((aligned (4))) =
{
    0xff, 0x01, 0x34, 0xa2, 0xef, 0x23, 0x14, 0xb3,
    0x57, 0x9c, 0xa4, 0x4f, 0x62, 0x1e, 0x8b, 0x27,
};

static const unsigned char NvAesDevKey256[] __attribute__ ((aligned (4))) =
{
    0xff, 0x01, 0x34, 0xa2, 0xef, 0x23, 0x14, 0xb3,
    0x57, 0x9c, 0xa4, 0x4f, 0x62, 0x1e, 0x8b, 0x27,
    0x56, 0x19, 0xa9, 0xef, 0x1b, 0x3f, 0x24, 0x35,
    0x85, 0x90, 0x3a, 0xff, 0x3f, 0x72, 0xd3, 0x42,
};

static const unsigned char NvRsaDevPublicKeyModulus2048[] __attribute__ ((aligned (4))) =
{
    0x57, 0xe9, 0x8a, 0x83, 0x49, 0x92, 0x9d, 0xbe,
    0x09, 0xaa, 0x17, 0x71, 0xd9, 0xce, 0x73, 0x11,
    0x3b, 0x18, 0x24, 0x4e, 0xf6, 0x91, 0xb2, 0x57,
    0x37, 0x33, 0xe5, 0x93, 0xd4, 0x66, 0x9e, 0xf5,
    0xd0, 0x62, 0x07, 0x3e, 0xae, 0xaf, 0x93, 0xdd,
    0x20, 0xb6, 0xd4, 0x4b, 0xe9, 0xe1, 0xca, 0x23,
    0x95, 0x4e, 0x0a, 0xc4, 0xf5, 0xa8, 0xe2, 0xba,
    0xb2, 0x4a, 0xc5, 0x35, 0x07, 0xbf, 0x9a, 0x2e,
    0x66, 0xee, 0xfb, 0xd5, 0x5a, 0x5c, 0x57, 0x53,
    0xbe, 0x36, 0xbe, 0xbc, 0xf5, 0x1a, 0x84, 0x1f,
    0x0a, 0x97, 0x46, 0x46, 0x77, 0xc0, 0x76, 0x21,
    0x3c, 0x74, 0x2f, 0x8b, 0x86, 0xa3, 0x3f, 0xd8,
    0xb0, 0x92, 0x4f, 0x4b, 0x72, 0x46, 0xd7, 0xb0,
    0xa7, 0x86, 0xf6, 0x85, 0xa1, 0x0f, 0xc1, 0x5b,
    0xd9, 0x31, 0xec, 0x4d, 0xff, 0x38, 0x12, 0x69,
    0x36, 0xa0, 0x52, 0x97, 0xe0, 0x0e, 0xc4, 0xff,
    0x25, 0xf9, 0xb4, 0x98, 0x1d, 0x86, 0x1d, 0xb1,
    0x77, 0x5c, 0x46, 0x7c, 0x07, 0x23, 0x5f, 0x21,
    0xaa, 0x2e, 0xde, 0xd2, 0x54, 0xe3, 0x22, 0x31,
    0xd9, 0x4a, 0x47, 0xaf, 0xce, 0x47, 0xb1, 0xac,
    0x7c, 0x69, 0x80, 0x91, 0xdf, 0x00, 0x65, 0x64,
    0x89, 0x05, 0x26, 0x72, 0xf9, 0x0b, 0x07, 0x89,
    0xd6, 0xd2, 0x60, 0x9b, 0x90, 0xcd, 0x25, 0xd5,
    0xdc, 0x8c, 0x28, 0xec, 0x60, 0x99, 0x48, 0x96,
    0xef, 0xe2, 0x0a, 0xb6, 0xec, 0xbe, 0xad, 0x05,
    0x88, 0x94, 0xbe, 0x43, 0xa3, 0xbb, 0x0a, 0xb7,
    0x00, 0x12, 0xa5, 0xb3, 0x9e, 0x09, 0x2d, 0x20,
    0x90, 0x42, 0x9c, 0xa3, 0x66, 0xc9, 0xcd, 0x17,
    0x2e, 0x2d, 0x3d, 0x9c, 0x47, 0x50, 0xb1, 0xca,
    0x94, 0x32, 0x26, 0x04, 0x56, 0xb4, 0xcc, 0xa7,
    0xae, 0xdd, 0x65, 0x3b, 0xc9, 0x33, 0xc9, 0xb8,
    0x14, 0xa6, 0x2f, 0x2c, 0xae, 0xd6, 0xc5, 0xd1,
    /*
    0xf9, 0x38, 0x07, 0x09, 0xca, 0x99, 0x47, 0xdf,
    0x5d, 0xb5, 0x38, 0x93, 0x0b, 0x3f, 0x44, 0xd4,
    0x63, 0x7e, 0xfb, 0x48, 0x53, 0xcc, 0x48, 0xf7,
    0x92, 0x0b, 0x46, 0xd4, 0x2d, 0x22, 0x17, 0xe7,
    0x56, 0x02, 0x1a, 0xb0, 0x44, 0x41, 0x49, 0x01,
    0x27, 0xcf, 0x01, 0x9d, 0x6f, 0x09, 0x13, 0x36,
    0xbc, 0x83, 0x61, 0xa3, 0x44, 0xa4, 0x1f, 0xff,
    0x02, 0x65, 0xf2, 0x1b, 0xe6, 0x9b, 0x5e, 0x65,
    0x27, 0xdd, 0x4d, 0x71, 0x05, 0x2d, 0x1d, 0x2e,
    0x39, 0x12, 0x5f, 0x7c, 0xea, 0x6c, 0xdd, 0x62,
    0x76, 0x25, 0x98, 0x13, 0xe7, 0xdd, 0x8e, 0x33,
    0x2e, 0xc1, 0x80, 0x88, 0x13, 0x00, 0xd4, 0x2e,
    0x7d, 0xbf, 0x3c, 0xdd, 0xaf, 0x51, 0x10, 0x55,
    0x61, 0xd4, 0xc6, 0xdb, 0x69, 0x3e, 0x4d, 0xec,
    0x4b, 0xd9, 0xfe, 0x36, 0x61, 0x83, 0x66, 0xc0,
    0xe1, 0x68, 0x14, 0xc0, 0x23, 0x71, 0x05, 0x79,
    0x44, 0x29, 0x5b, 0x21, 0x27, 0x4b, 0x01, 0x70,
    0x2b, 0x20, 0x67, 0x80, 0xe2, 0x22, 0x18, 0xd1,
    0x09, 0x7f, 0x45, 0x80, 0x3b, 0x6b, 0xd0, 0x3a,
    0x60, 0x26, 0x83, 0xa9, 0x0e, 0x9b, 0x4f, 0xa4,
    0x6d, 0x14, 0x22, 0x3f, 0x9c, 0x75, 0xaf, 0xa2,
    0x6c, 0x2c, 0x84, 0xd7, 0x5a, 0x04, 0x22, 0xf6,
    0xc2, 0xff, 0x95, 0xf0, 0x01, 0x19, 0x05, 0x2d,
    0xab, 0x5d, 0x6e, 0x4e, 0xcb, 0xa8, 0xa7, 0xba,
    0x18, 0x2a, 0xf3, 0x9a, 0x61, 0xdd, 0xfc, 0x56,
    0xbb, 0xe6, 0xf7, 0xa7, 0x12, 0x2c, 0xfe, 0x44,
    0xb7, 0x18, 0x42, 0x11, 0xf0, 0xf8, 0x70, 0xec,
    0xf3, 0xdd, 0x4e, 0xd7, 0xe0, 0xe2, 0x08, 0xe2,
    0x2a, 0xcb, 0x56, 0x9d, 0x72, 0x3b, 0x9a, 0x4d,
    0x42, 0x7b, 0x2c, 0x96, 0xd7, 0xdf, 0x39, 0xec,
    0x8c, 0x36, 0xca, 0x1b, 0x2a, 0xa4, 0x8d, 0xb1,
    0x73, 0xe0, 0x02, 0x8b, 0x40, 0x0e, 0xf6, 0x93,
    */
};

static const unsigned char NvRsaDevPublicKeyExponent2048[] __attribute__ ((aligned (4))) =
{
    0x01, 0x00, 0x01,
};

/*
 * This EC public key is a point on the P-256 NIST curve (aka secp256r1).
 * This EC key is in little endian ordering, i.e. least significant byte first.
 *
 * Key generated using polarssl.
 * X_Q:   3ED30AD9FD02A81788C4AB57F6D898D7D62F3C489247E35ADA2FD4E64B6F39BC
 * Y_Q:   18C513560AB596E2FFBED2C8FDE526E5056222EB47074D7EA34A0C171DBB0E58
 * D:     602BE370C0B45655BEA1AA8462D79ECB0651F19F29499657CDE935EE52361C38
 *
 */
static const unsigned char NvEcDevPublicKeyQx256[] __attribute__ ((aligned (4))) =
{
    0xbc, 0x39, 0x6f, 0x4b, 0xe6, 0xd4, 0x2f, 0xda,
    0x5a, 0xe3, 0x47, 0x92, 0x48, 0x3c, 0x2f, 0xd6,
    0xd7, 0x98, 0xd8, 0xf6, 0x57, 0xab, 0xc4, 0x88,
    0x17, 0xa8, 0x02, 0xfd, 0xd9, 0x0a, 0xd3, 0x3e,
};

/*
 * This EC key is in little endian ordering, i.e. least significant byte first.
 */
static const unsigned char NvEcDevPublicKeyQy256[] __attribute__ ((aligned (4))) =
{
    0x58, 0x0e, 0xbb, 0x1d, 0x17, 0x0c, 0x4a, 0xa3,
    0x7e, 0x4d, 0x07, 0x47, 0xeb, 0x22, 0x62, 0x05,
    0xe5, 0x26, 0xe5, 0xfd, 0xc8, 0xd2, 0xbe, 0xff,
    0xe2, 0x96, 0xb5, 0x0a, 0x56, 0x13, 0xc5, 0x18,
};

#endif
